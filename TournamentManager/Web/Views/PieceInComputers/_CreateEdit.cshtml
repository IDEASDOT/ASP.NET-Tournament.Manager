@model Web.ViewModels.PieceInComputerCreateEditViewModel

<div class="form-group">
    @Html.LabelFor(model => model.PieceInComputer.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.PieceInComputer.Quantity, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PieceInComputer.Quantity, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.PieceInComputer.ProductSelectorId, "ProductSelectorId", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.PieceInComputer.ProductSelectorId, Model.ProductSelectorSelectList, "-- Select --", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.PieceInComputer.ProductSelectorId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.PieceInComputer.CompSpecId, "CompSpecId", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.PieceInComputer.CompSpecId, Model.ComputerSpecificationSelectList, "-- Select --", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.PieceInComputer.CompSpecId, "", new { @class = "text-danger" })
    </div>
</div>